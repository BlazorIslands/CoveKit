@namespace CoveKit

@implements ICoveKitComponent
@implements IFontable
@implements ITextColorable

<p class="p-2 @Class"
   style="@(SetFont(Font)) @(SetFontSize(FontSize)) @(SetTextColor(TextColor)) @Style"
   @attributes="AdditionalAttributes">
    @ChildContent
</p>

@code {
    [Parameter] public string? Class { get; set; }
    [Parameter] public string? Style { get; set; }
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object> AdditionalAttributes { get; set; }
    [Parameter] public CoveFont Font { get; set; }
    [Parameter] public CoveFontSize FontSize { get; set; }

    [Parameter] public object TextColor { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }

    public string SetFont(CoveFont coveFont) 
    {
        return CoveFontHelper.GetCoveFont(coveFont);
    }

    public string SetFontSize(CoveFontSize coveFontSize)
    {
        return CoveFontHelper.GetCoveFontSize(coveFontSize);
    }

    public string SetTextColor(object textColor) 
    {
        if (textColor is CoveColor coveColor) 
        {
            return $"color: {CoveColorHelper.GetColorRgba(coveColor)};";
        }

        if (textColor is CustomCoveColor customCoveColor)
        {
            return $"color: {customCoveColor};";
        }

        return string.Empty;
    }
}